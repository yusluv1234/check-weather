{"ast":null,"code":"import { GET_WEATHER, SET_ERROR, SET_LOADING } from '../types';\nconst API_KEY = process.env.WHEATHER_API_KEY;\nconsole.log(API_KEY);\nexport const getWeather = city => {\n  return async dispatch => {\n    try {\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n\n      if (!res.ok) {\n        const resData = await res.json();\n        throw new Error(resData.message);\n      }\n\n      const resData = await res.json();\n      dispatch({\n        type: GET_WEATHER,\n        payload: resData\n      });\n    } catch (err) {\n      dispatch({\n        type: SET_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\nexport const setError = () => {\n  return {\n    type: SET_ERROR,\n    payload: ''\n  };\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/REACT PROJECT/wether-app-pwa/src/store/actions/weatherActions.ts"],"names":["GET_WEATHER","SET_ERROR","SET_LOADING","API_KEY","process","env","WHEATHER_API_KEY","console","log","getWeather","city","dispatch","res","fetch","ok","resData","json","Error","message","type","payload","err","setLoading","setError"],"mappings":"AAEA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAA8F,UAA9F;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAA5B;AACAC,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,OAAO,MAAMM,UAAU,GAAIC,IAAD,IAAqE;AAC7F,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,qDAAoDH,IAAK,UAASP,OAAQ,EAA5E,CAAvB;;AAEA,UAAG,CAACS,GAAG,CAACE,EAAR,EAAY;AACV,cAAMC,OAAqB,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAApC;AACA,cAAM,IAAIC,KAAJ,CAAUF,OAAO,CAACG,OAAlB,CAAN;AACD;;AAED,YAAMH,OAAoB,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnC;AACAL,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEnB,WADC;AAEPoB,QAAAA,OAAO,EAAEL;AAFF,OAAD,CAAR;AAID,KAbD,CAaC,OAAMM,GAAN,EAAW;AACVV,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAElB,SADC;AAEPmB,QAAAA,OAAO,EAAEC,GAAG,CAACH;AAFN,OAAD,CAAR;AAID;AACF,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMI,UAAU,GAAG,MAAqB;AAC7C,SAAO;AACLH,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMqB,QAAQ,GAAG,MAAqB;AAC3C,SAAO;AACLJ,IAAAA,IAAI,EAAElB,SADD;AAELmB,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '../index';\r\nimport { GET_WEATHER, SET_ERROR, SET_LOADING, WeatherAction, WeatherData, WeatherError } from '../types';\r\n\r\nconst API_KEY = process.env.WHEATHER_API_KEY;\r\nconsole.log(API_KEY);\r\n\r\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\r\n\r\n      if(!res.ok) {\r\n        const resData: WeatherError = await res.json();\r\n        throw new Error(resData.message);\r\n      }\r\n\r\n      const resData: WeatherData = await res.json();\r\n      dispatch({\r\n        type: GET_WEATHER,\r\n        payload: resData\r\n      });\r\n    }catch(err) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: err.message\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const setLoading = (): WeatherAction => {\r\n  return {\r\n    type: SET_LOADING\r\n  }\r\n}\r\n\r\nexport const setError = (): WeatherAction => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: ''\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}