{"version":3,"sources":["components/Alert.tsx","store/types.ts","store/actions/alertActions.ts","components/Search.tsx","store/actions/weatherActions.ts","components/Weather.tsx","App.tsx","store/reducers/alertReducer.ts","store/reducers/weatherReducer.ts","store/index.ts","index.tsx"],"names":["Alert","message","onClose","className","onClick","style","justifyContent","GET_WEATHER","SET_LOADING","SET_ERROR","SET_ALERT","setAlert","type","payload","Search","title","dispatch","useDispatch","useState","city","setCity","onSubmit","e","preventDefault","trim","a","fetch","res","ok","json","resData","Error","getWeather","placeholder","maxWidth","value","onChange","currentTarget","margin","Weather","data","fahrenheit","main","temp","toFixed","celsius","marginBottom","name","sys","country","alignItems","weather","description","src","icon","alt","humidity","pressure","wind","speed","App","weatherData","useSelector","state","loading","error","alertMsg","alert","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d23891e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface AlertProps {\r\n  message: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Alert: React.FC<AlertProps> = ({ message, onClose }) => {\r\n  return (\r\n    <div className=\"modal is-active has-text-centered\">\r\n      <div className=\"modal-background\" onClick={onClose}>\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head has-background-danger\">\r\n            <p className=\"modal-card-title has-text-white\">{message}</p>\r\n          </header>\r\n          <footer\r\n            className=\"modal-card-foot\"\r\n            style={{ justifyContent: \"center\" }}\r\n          >\r\n            <button className=\"button\" onClick={onClose}>\r\n              Close\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","export const GET_WEATHER = 'GET_WEATHER';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const SET_ALERT = 'SET_ALERT';\r\n\r\nexport interface Weather {\r\n  description: string;\r\n  icon: string;\r\n  id: number;\r\n  main: string;\r\n}\r\n\r\nexport interface WeatherData {\r\n  base: string;\r\n  clouds: {\r\n    all: number;\r\n  };\r\n  cod: number;\r\n  coord: {\r\n    lon: number;\r\n    lat: number;\r\n  };\r\n  dt: number;\r\n  id: number;\r\n  main: {\r\n    feels_like: number;\r\n    humidity: number;\r\n    pressure: number;\r\n    temp: number;\r\n    temp_max: number;\r\n    temp_min: number;\r\n  };\r\n  name: string;\r\n  sys: {\r\n    country: string;\r\n    id: number;\r\n    sunrise: number;\r\n    sunset: number;\r\n     type: number;\r\n  };\r\n  timezone: number;\r\n  visibility: number;\r\n  weather: Weather[];\r\n  wind: {\r\n    speed: number;\r\n    deg: number;\r\n  };\r\n}\r\n\r\nexport interface WeatherError {\r\n  cod: string;\r\n  message: string;\r\n}\r\n\r\nexport interface WeatherState {\r\n  data: WeatherData | null;\r\n  loading: boolean;\r\n  error: string;\r\n}\r\n\r\ninterface GetWeatherAction {\r\n  type: typeof GET_WEATHER;\r\n  payload: WeatherData;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof SET_LOADING;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type WeatherAction = GetWeatherAction | SetLoadingAction | SetErrorAction;\r\n\r\nexport interface AlertAction {\r\n  type: typeof SET_ALERT;\r\n  payload: string;\r\n}\r\n\r\nexport interface AlertState {\r\n  message: string;\r\n}","import { AlertAction, SET_ALERT } from '../types';\r\n\r\nexport const setAlert = (message: string): AlertAction => {\r\n  return {\r\n    type: SET_ALERT,\r\n    payload: message\r\n  }\r\n}","import React, { FC, FormEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/actions/alertActions\";\r\nimport { getWeather, setLoading } from \"../store/actions/weatherActions\";\r\n\r\ninterface SearchProps {\r\n  title: string;\r\n}\r\n\r\nconst Search: FC<SearchProps> = ({ title }) => {\r\n  const dispatch = useDispatch();\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const changeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n    setCity(e.currentTarget.value);\r\n  };\r\n\r\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (city.trim() === \"\") {\r\n      return dispatch(setAlert(\"City is required!\"));\r\n    }\r\n\r\n    dispatch(setLoading());\r\n    dispatch(getWeather(city));\r\n    setCity(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"hero is-light has-text-centered\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <h1 className=\"title\">{title}</h1>\r\n          <form className=\"py-5\" onSubmit={submitHandler}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"input has-text-centered mb-2\"\r\n              placeholder=\"Enter city name\"\r\n              style={{ maxWidth: 300 }}\r\n              value={city}\r\n              onChange={changeHandler}\r\n            />\r\n            <button\r\n              className=\"button is-primary is-fullwidth\"\r\n              style={{ maxWidth: 300, margin: \"0 auto\" }}\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '../index';\r\nimport { GET_WEATHER, SET_ERROR, SET_LOADING, WeatherAction, WeatherData, WeatherError } from '../types';\r\n\r\nconst API_KEY = 'b1507074fdbc577d3d97b9b997f3827e';\r\n\r\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\r\n\r\n      if(!res.ok) {\r\n        const resData: WeatherError = await res.json();\r\n        throw new Error(resData.message);\r\n      }\r\n\r\n      const resData: WeatherData = await res.json();\r\n      dispatch({\r\n        type: GET_WEATHER,\r\n        payload: resData\r\n      });\r\n    }catch(err) {\r\n      dispatch({\r\n        type: SET_ERROR,\r\n        payload: err.message\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport const setLoading = (): WeatherAction => {\r\n  return {\r\n    type: SET_LOADING\r\n  }\r\n}\r\n\r\nexport const setError = (): WeatherAction => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: ''\r\n  }\r\n}","import React, { FC } from \"react\";\r\nimport { WeatherData } from \"../store/types\";\r\n\r\ninterface WeatherProps {\r\n  data: WeatherData;\r\n}\r\n\r\nconst Weather: FC<WeatherProps> = ({ data }) => {\r\n  const fahrenheit = (data.main.temp * 1.8 - 459.67).toFixed(2);\r\n  const celsius = (data.main.temp - 273.15).toFixed(2);\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title has-text-centered\" style={{ marginBottom: 50 }}>\r\n          {data.name} - {data.sys.country}\r\n        </h1>\r\n        <div className=\"level\" style={{ alignItems: \"flex-start\" }}>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">{data.weather[0].description}</p>\r\n              <p className=\"title\">\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`}\r\n                  alt=\"\"\r\n                />\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">temp</p>\r\n              <div className=\"title\">\r\n                <p className=\"mb-2\">{data.main.temp}K</p>\r\n                <p className=\"mb-2\">\r\n                  {fahrenheit}\r\n                  <sup>&#8457;</sup>\r\n                </p>\r\n                <p>\r\n                  {celsius}\r\n                  <sup>&#8451;</sup>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">humidity</p>\r\n              <p className=\"title\">{data.main.humidity}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">pressure</p>\r\n              <p className=\"title\">{data.main.pressure}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">wind</p>\r\n              <p className=\"title\">{data.wind.speed} m/s</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\nimport Search from \"./components/Search\";\r\nimport Weather from \"./components/Weather\";\r\nimport { RootState } from \"./store\";\r\nimport { setAlert } from \"./store/actions/alertActions\";\r\nimport { setError } from \"./store/actions/weatherActions\";\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const weatherData = useSelector((state: RootState) => state.weather.data);\r\n  const loading = useSelector((state: RootState) => state.weather.loading);\r\n  const error = useSelector((state: RootState) => state.weather.error);\r\n  const alertMsg = useSelector((state: RootState) => state.alert.message);\r\n\r\n  return (\r\n    <div className=\"has-text-centered\">\r\n      <Search title=\"Enter city name and search button\" />\r\n      {loading ? (\r\n        <h2 className=\"is-size-3 py-2\">Loading.....</h2>\r\n      ) : (\r\n        weatherData && <Weather data={weatherData} />\r\n      )}\r\n      {alertMsg && (\r\n        <Alert message={alertMsg} onClose={() => dispatch(setAlert(\"\"))} />\r\n      )}\r\n      {error && <Alert message={error} onClose={() => dispatch(setError())} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { AlertAction, AlertState, SET_ALERT } from '../types';\r\n\r\nconst initialState: AlertState = {\r\n  message: ''\r\n}\r\n\r\nexport default (state = initialState, action: AlertAction): AlertState => {\r\n  switch(action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        message: action.payload\r\n      }\r\n      default:\r\n        return state;\r\n  }\r\n}","import { GET_WEATHER, SET_ERROR, SET_LOADING, WeatherAction, WeatherState } from '../types';\r\n\r\nconst initialState: WeatherState = {\r\n  data: null,\r\n  loading: false,\r\n  error: ''\r\n}\r\n\r\nexport default (state = initialState, action: WeatherAction): WeatherState => {\r\n  switch(action.type) {\r\n    case GET_WEATHER:\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        error: ''\r\n      }\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n        case SET_ERROR:\r\n          return{\r\n            ...state,\r\n            error: action.payload,\r\n            loading: false\r\n          }\r\n          default:\r\n            return state;\r\n  }\r\n}","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport alertReducer from './reducers/alertReducer';\r\nimport weatherReducer from './reducers/weatherReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n  alert: alertReducer\r\n});\r\n\r\nconst store: Store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"../node_modules/bulma/css/bulma.min.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}